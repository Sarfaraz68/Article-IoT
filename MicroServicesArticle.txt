Microservices - In the eyes of a layman.
=======================================
By Sarfaraz Ahmed Khan - (IOT047399)

Definition
==========
Microservices architecture or simply known as microservices is a collection of services that are loosely coupled and can be managed easily. 

Furthermore, these services can be tested and deployed independently. Microservices architecture is a practice of breaking an application into smaller and independent components which can communicate through an API interface.

Before The Emergence Of Microservices
=====================================
In the beginning of software development only highly qualified people could write a computer programme. In 1964 BASIC language was developed which made programme-writing easy for less qualified people. Therefore in the 1960s software began to become lengthy and complex. The computer scientist introduced a modular approach to overcome complexity of the programmes. In 1972 the concept of modularity introduced which led to Modular software development. This concept consists of decomposing large/lengthy code of softwares into loosely coupled and highly cohesive modules that made  sure that one module should focus on single functionality.

After the rise of internet, applications become large and more complex applications therefore  another architecture introduced i.e. Layered Architect which consist of Presentation, Business, Database layers.

In 1997 computer scientist/researchers point out the following problems with Monolithic Architecture (MA):

1. Unregulated growth
2. Too many responsibilities
3. Lacks proper Architecture
4. Spaghetti Code
5. Make it working

It was clear that owing to the above mentioned problems Monolithic Architecture was unable to handle the challenges of Modern, Fast-Paced and Web-Scale Software development.

Further we will check out what are the limitations of Monolithic Architecture.

1. Application Scaling: the capacity to make change in size or scale of Applications in (MA) is burdensome and difficult . Monolithic software is developed in a single programming language and therefore it is not possible to implement one single module of it in other programming languages.
2. Development Velocity: adding a new features in monolithic application is difficult because, therefore making changes is slow
3. Release Cycle: at present large release cycles put a company on disadvantage the more large release cycle more chance of losing market. 
4. Modularization: the Modules in Monolithic Architecture are tightly coupled, therefore, as the application begins to grow ,modules begin to merge.
5. Modernization: Modernization of Monolithic application is often expensive and time-consuming.

Advantages of Microservices
===========================
1. Microservices are small therefore easy to build by a team of few developers.
2. Modules are separated that makes development of applications easier.
3. Microservices can be deployed independently. 
4. If there is a bug/error in a service, the entire application will not stop working. After removing the bug/error service can be redeployed.
5. Choosing technology i.e. programming language, database etc,  which suits the requirement of application, in MA is not limited.
6. New features can be deployed and old features can be discarded easily.

Advantages of Microservices
===========================
1. Design Complexity: 
2. Distributed Systems Complexity:
3. Operational Complexity:
4. Security:
5. Data Sharing and Data Consistency:
6. Communication Complexities:





